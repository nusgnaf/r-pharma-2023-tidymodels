---
title: "Introduction to machine learning with {tidymodels}"
subtitle: "R/Pharma 2023"
author: "Dr Nicola Rennie"
format:
  LUstyle-revealjs:
    self-contained: true
    footer: "[nrennie.github.io/r-pharma-2023-tidymodels](https://nrennie.github.io/r-pharma-2023-tidymodels)"
bibliography: references.bib
---

# Welcome!

## 本次研讨会的学习目标。

The workshop will run for *2 hours*.

* Combines slides, live coding examples, quiz questions, and exercises for you to participate in.

* Ask questions in the chat throughout!

## 本次研讨会的学习目标。

::: columns
::: {.column}

<br>

I hope you end up with more questions than answers after this workshop!

:::

::: {.column .center}

<br>

![](images/questions.gif){fig-align="center" fig-alt="Stranger Things questions gif" width=80%}

<small>Source: <a href="https://giphy.com/gifs/netflix-stranger-things-4-st4-cn7GcSZ1KWqO7CJw1B">giphy.com</a></small>

:::
:::


## 研讨会学习资源

::: columns
::: {.column}

* GitHub: [github.com/nrennie/r-pharma-2023-tidymodels](https://github.com/nrennie/r-pharma-2023-tidymodels)

* Slides: [nrennie.github.io/r-pharma-2023-tidymodels](https://nrennie.github.io/r-pharma-2023-tidymodels)

:::
::: {.column}

![](images/qr-code-slides.png){fig-align="center" fig-alt="QR code" width=70%}

:::

:::

## 数据集

We'll use two data sets in this workshop:

* Examples data: Heart Failure Clinical Records. [archive.ics.uci.edu/dataset/519/heart+failure+clinical+records](http://archive.ics.uci.edu/dataset/519/heart+failure+clinical+records)

```{r}
#| label: read-data-example
#| echo: true
#| eval: false
heart_failure <- readr::read_csv("data/heart_failure.csv")
```

<br>

* Exercises data: Physical Exercise in Patients with Subacute Stroke (PHYS-STROKE): safety analyses of six-month follow-up of a randomized clinical trial. [doi.org/10.5281/zenodo.3899830](https://doi.org/10.5281/zenodo.3899830)

```{r}
#| label: read-data-exercises
#| echo: true
#| eval: false
exercises <- readr::read_csv("data/exercises.csv")
```

## 小测验!

之前你是否使用R语言做过机器学习？?

* No

* Yes, with {tidymodels}

* Yes, with {caret}

* Yes, with something else

# Getting started with \{tidymodels\} {background-color="#D9DBDB"}

## {tidymodels} 是什么?

::: columns
::: {.column}

* A collection of R packages for statistical modelling and machine learning.

* Follows the {tidyverse} principles.

* `install.packages("tidymodels")`

:::

::: {.column}

![](images/tidymodels.png){fig-align="center" fig-alt="tidymodels R package hex sticker logo" width=50%}

:::
:::

## {tidymodels} 是什么?

::: columns

::: {.column}

There are some core {tidymodels} packages...

<br>

... and plenty of extensions!

:::

::: {.column .center}

![](images/tidymodels-pkgs.png){fig-align="center" fig-alt="tidymodels packages hex sticker logo" width=100%}

<small>Source: <a href="https://rpubs.com/chenx/tidymodels_tutorial">rpubs.com/chenx/tidymodels_tutorial</a></small>

:::

:::

## 机器学习是什么？

::: columns
::: {.column}

![](images/ML-01.png){fig-align="center" fig-alt="Machine learning diagram" width=80%}

:::

::: {.column}

* Learning from data

* Mostly used to make predictions or classifications.

:::
:::

## 机器学习是什么？

::: columns
::: {.column}

![](images/ML-02.png){fig-align="center" fig-alt="Machine learning diagram" width=80%}

:::

::: {.column}

* Learning from data

* Mostly used to make predictions or classifications.

:::
:::

## 机器学习有哪几类？

::: columns

::: {.column}

**Supervised learning**: requires labelled input data

* Classification

* Regression-based models

* ...

:::

::: {.column}

**Unsupervised learning**: does not require labelled input data

* Clustering

* Association rules

* ...

:::

:::

Other types of machine learning include *semi-supervised learning* and *reinforcement learning*.

# 在我们开始拟合模型之前... {background-color="#D9DBDB"}

## 训练、测试数据集

![](images/TrainTest.png){fig-align="center" fig-alt="Training and testing diagram" width=70%}

## Hyperparameter tuning

::: columns

::: {.column width="30%"}

We can't always learn every parameter from the data.

:::

::: {.column .fragment width="70%"}

![](images/kfold.jpg){fig-align="center" fig-alt="kfold validation" width=70%}

<small>Source: <a href="https://www.researchgate.net/publication/332370436_Introduction_to_Support_Vector_Machines_and_Kernel_Methods">Introduction to Support Vector Machines and Kernel Methods. Ashfaque and Iqbal. 2019.</a></small>

:::

:::

## 流程和食谱

::: columns

::: {.column width="30%"}

![](images/recipes.png){fig-align="center" fig-alt="recipes package hex sticker" width=80%}

:::

::: {.column width="70%"}

**食谱*

A series of preprocessing steps performed on data before you fit a model.

<br>

**流程**

An object that can combine your pre-processing, modelling, and post-processing steps. E.g. combine a `recipe` with a model.


:::

:::

## 用{tidymodels}做预训练

### Live demo!

<br><br>

::: {.fragment}

See `examples/example_01.R` for full code.

:::

## Exercise 1

Open `exercises/exercise_01.R` for prompts.

* Load the {tidyverse} and {tidymodels} packages

* Read in the `exercises.csv` data

* View and explore the data

* Perform the initial split (choose your own proportion!)

* Create some cross-validation folds

* Build a recipe and workflow

```{r}
#| label: ex-1-timer
countdown::countdown(minutes = 10,
                    color_border = "#b20e10",
                    color_text = "#b20e10",
                    color_running_text = "white",
                    color_running_background = "#b20e10",
                    color_finished_text = "#b20e10",
                    color_finished_background = "white",
                    top = 0,
                    margin = "1.2em",
                    font_size = "2em")
```

. . .

See `exercise_solutions/exercise_solutions_01.R` for full code.

# LASSO回归 {background-color="#D9DBDB"}

## 线性和逻辑回归模型

首先，让我们先回顾一下...

. . .

::: columns

::: {.column}
**线性回归**
```{r}
#| label: lin-reg
#| eval: false
#| echo: true
lm(y ~ x, data = model_data)
```

![](images/lasso_01.png){fig-align="center" fig-alt="Linear regression plot" width=70%}

:::

::: {.column .fragment}
**逻辑斯蒂回归**

```{r}
#| label: log-reg
#| eval: false
#| echo: true
glm(y ~ x, family = "binomial", data = model_data)
```

![](images/lasso_02.png){fig-align="center" fig-alt="Linear regression plot" width=70%}

:::

:::

## 测验！

在选择要包括哪些解释变量时，您会如何选择？

* 使用背景知识

* 使用 p 值和变量之间的相关性

* 逐步程序（前向/后向/双向）

* 其他方式

## LASSO回归

::: columns
::: {.column}

**Standard regression**: minimise distance between predicted and observed values

<br>

**Least Absolute Shrinkage and Selection Operator (LASSO)**: minimise (distance between predicted and observed values + $\lambda$ $\times$ sum of coefficients)

<br>

See also: ridge regression

:::
::: {.column .fragment}

![](images/lambda.png){fig-align="center" fig-alt="Lambda plot for lasso regression" width=100%}

<small>Source: <a href="https://www.cvxpy.org/examples/machine_learning/lasso_regression.html">cvxpy.org/examples/machine_learning/lasso_regression.html</a></small>

:::
:::

## LASSO回归的超参数


**$\lambda$ (penalty)** takes a value between 0 and $\infty$.

* Higher value: more coefficients are pushed towards zero

* Lower value: closer to standard regression models. ($\lambda = 0$ ~ standard regression model)

## 模型评估

::: columns
::: {.column}

**(二元) 分类指标**

* 精度（Accuracy）：正确预测的数据占总数据的比例。

* ROC AUC：ROC曲线下的面积（接收者操作特征曲线）。

* Kappa：类似于精度，但考虑了仅仅由偶然机会带来的精度。

参考[yardstick.tidymodels.org/articles/metric-types.html](https://yardstick.tidymodels.org/articles/metric-types.html).

:::
::: {.column .fragment .center}

![](images/roc.png){fig-align="center" fig-alt="ROC curve" width=100%}

<small>Source: <a href="https://commons.wikimedia.org/wiki/File:Roc-draft-xkcd-style.svg#filelinks">Martin Thoma (Wikipedia)</a></small>
:::
:::

## 使用 {tidymodels} 进行 LASSO 逻辑回归

### 现场演示！

<br><br>

::: {.fragment}

See `examples/example_02.R` for full code.

:::

## 练习 2

打开 `exercises/exercise_02.R` 获取提示。您也可以使用 `examples/example_02.R` 作为起点。

* 使用 `logistic_reg()` 指定模型。

* 调整超参数。

* 选择最佳值并拟合最终模型。

* 评估模型性能。

```{r}
#| label: ex-2-timer
countdown::countdown(minutes = 10,
                    color_border = "#b20e10",
                    color_text = "#b20e10",
                    color_running_text = "white",
                    color_running_background = "#b20e10",
                    color_finished_text = "#b20e10",
                    color_finished_background = "white",
                    top = 0,
                    margin = "1.2em",
                    font_size = "2em")
```

. . .

See `exercise_solutions/exercise_solutions_02.R` for full code.

## 测验！

您的LASSO模型的ROC AUC是多少？

* 小于70%

* 70-80%

* 80-90%

* 90-100%

# 随机森林 {background-color="#D9DBDB"}

## 决策树

::: columns
::: {.column}

A tree-like model of decisions and their possible consequences.

:::
::: {.column}

![](images/rf_01.png){fig-align="center" fig-alt="Decision tree about walking to work and the weather" width=80%}

:::
:::

## 什么是随机森林？

::: columns
::: {.column}

* 一种集成方法

* 结合了许多决策树。

* 可用于分类或回归问题。

* 对于分类任务，随机森林的输出是被大多数决策树选中的类别。

:::
::: {.column}

![](images/rf.png){fig-align="center" fig-alt="Random Forest diagram" width=100%}

<small>Source: <a href="https://en.m.wikipedia.org/wiki/File:Random_forest_explain.png">Tse Ki Chun (Wikimedia)</a></small>

:::
:::

## 随机森林的超参数

**trees**：集成中树的数量。

<br>

**mtry**：在创建树模型时，每次分割时随机抽样的预测变量数量。

<br>

**min_n**：需要将节点进一步分割所需的节点中的最小数据点数。

## 在 {tidymodels} 中的随机森林

### 现场演示！

<br><br>

::: {.fragment}

See `examples/example_03.R` for full code.

:::

## 练习 3

打开 `exercises/exercise_03.R` 获取提示。您也可以使用 `examples/example_03.R` 作为起点。

* 使用 `rand_forest()` 指定随机森林模型。

* 使用交叉验证折叠调整超参数。

* 拟合最终模型并评估它。

```{r}
#| label: ex-3-timer
countdown::countdown(minutes = 10,
                    color_border = "#b20e10",
                    color_text = "#b20e10",
                    color_running_text = "white",
                    color_running_background = "#b20e10",
                    color_finished_text = "#b20e10",
                    color_finished_background = "white",
                    top = 0,
                    margin = "1.2em",
                    font_size = "2em")
```

. . .

See `exercise_solutions/exercise_solutions_03.R` for full code.

# 支持向量机（SVM） {background-color="#D9DBDB"}

## 什么是支持向量机？

::: columns
::: {.column}

支持向量机（SVM）绘制了最佳分离两个组的决策边界。

:::
::: {.column}

![](images/svm_01.png){fig-align="center" fig-alt="Scatter plot with two groups" width=100%}
:::
:::

## 什么是支持向量机？

::: columns
::: {.column}

Support Vector Machines (SVMs) draw a decision boundary that best separates two groups.

:::
::: {.column}

![](images/svm_02.png){fig-align="center" fig-alt="Scatter plot with two groups with dividing line" width=100%}
:::
:::

## Types of SVM

There are different types of *kernel* functions, including:

::: columns
::: {.column width="33%" .center}
Linear

`svm_linear()`

![](images/svm_03.png){fig-align="center" fig-alt="linear kernel plot" width=100%}
:::

::: {.column width="33%" .center}
Polynomial

`svm_poly()`

![](images/svm_04.png){fig-align="center" fig-alt="polynomial kernel plot" width=100%}
:::

::: {.column width="33%" .center}
Radial Basis Functions

`svm_rbf()`

![](images/svm_05.png){fig-align="center" fig-alt="RBF kernel plot" width=100%}
:::

:::

## SVM中的超参数

**成本（Cost）**

* 较高的值：强调拟合数据
* 较低的值：优先避免过度拟合

**Gamma（决策边界的形状和平滑度）**

* 较高的值：更灵活的边界
* 较低的值：更简单的边界

根据内核的选择，还可能存在其他超参数。

## 在 {tidymodels} 中的支持向量机

### 现场演示！

<br><br>

::: {.fragment}

See `examples/example_04.R` for full code.

:::

## 练习 4

打开 `exercises/exercise_04.R` 获取提示。如果您感到自信，也可以使用 `svm_rbf()`（或其他 `svm_*` 函数之一）作为起点。

* 使用 `svm_rbf()` 指定支持向量机模型（或其他 `svm_*` 函数）。

* 使用交叉验证折叠调整 `cost()` 超参数。

* 拟合最终模型并评估它。

* 查看一些其他评估指标。

```{r}
#| label: ex-4-timer
countdown::countdown(minutes = 10,
                    color_border = "#b20e10",
                    color_text = "#b20e10",
                    color_running_text = "white",
                    color_running_background = "#b20e10",
                    color_finished_text = "#b20e10",
                    color_finished_background = "white",
                    top = 0,
                    margin = "1.2em",
                    font_size = "2em")
```

. . .

查看 `exercise_solutions/exercise_solutions_04.R` 获取完整的代码。

## 测验

在 `exercises` 数据上，以下三个模型中哪一个表现最好？

* LASSO

* 随机森林

* SVM

# 附加信息 {background-color="#D9DBDB"}

## 了解更多有关机器学习的信息

有许多机器学习主题和 {tidymodels} 函数我们今天没有涵盖到。除了学习模型的技术细节和编写代码，还重要学习以下内容：

* 伦理

* 偏见和歧视

* 可解释性和验证

* ...

## 附加资源

::: columns

::: {.column}

<br>

* [{tidymodels} documentation](https://www.tidymodels.org/)

* [Tidy Modeling with R](https://www.tmwr.org/)

* [Blog by Julia Silge](https://juliasilge.com/blog/)

:::

::: {.column}

![](images/tmwr.png){fig-align="center" fig-alt="Tidy modelling with R cover" width=60%}

:::

:::

## Workshop resources

* GitHub: [github.com/nrennie/r-pharma-2023-tidymodels](https://github.com/nrennie/r-pharma-2023-tidymodels)

* Slides: [nrennie.github.io/r-pharma-2023-tidymodels](https://nrennie.github.io/r-pharma-2023-tidymodels)


##

::: columns
::: {.column}

<br>

{{< fa brands linkedin >}} [nicola-rennie](https://www.linkedin.com/in/nicola-rennie/)

{{< fa brands mastodon >}} [\@fosstodon.org/\@nrennie](https://fosstodon.org/deck/@nrennie)

{{< fa brands github >}} [nrennie](https://github.com/nrennie)

{{< fa globe >}} [nrennie.rbind.io](https://nrennie.rbind.io/)

{{< fa briefcase >}} [chicas.lancaster-university.uk](https://chicas.lancaster-university.uk/)

:::
::: {.column}

![](images/qr-code.png){fig-align="center" fig-alt="QR code" width=70%}

:::
:::
